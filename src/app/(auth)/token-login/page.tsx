'use client';

import { useEffect } from 'react';
import { useSearchParams, useRouter } from 'next/navigation';
import { signIn } from 'next-auth/react';
import jwt_decode from 'jwt-decode';

export default function TokenLoginPage() {
  const params = useSearchParams();
  const router = useRouter();
  const token = params.get('token');

  useEffect(() => {
    if (token) {
      try {
        const decoded = jwt_decode(token); // ‚úÖ ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô token ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà

        // üëâ ‡∏ó‡∏≥ redirect ‡πÑ‡∏õ‡∏¢‡∏±‡∏á API login ‡πÅ‡∏ö‡∏ö custom ‡∏´‡∏£‡∏∑‡∏≠ save ‡∏•‡∏á local/session storage
        localStorage.setItem('token', token); // ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤ backend
        router.push('/'); // ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ dashboard
      } catch (e) {
        console.error('Invalid token');
        router.push('/login');
      }
    } else {
      router.push('/login');
    }
  }, [token, router]);

  return <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö...</p>;
}
